AWSTemplateFormatVersion: 2010-09-09 
Transform: 
  - AWS::Serverless-2016-10-31
  - AWS::CodeStar

Parameters:
  ProjectId:
    Default: race-records
    Type: String
    Description: CodeStar projectId used to associate new resources to team members

# Enable blue/green deployments using this Globals section. For instructions, see the AWS CodeStar User Guide:
# https://docs.aws.amazon.com/codestar/latest/userguide/how-to-modify-serverless-project.html?icmpid=docs_acs_rm_tr
#
# Globals:
#   Function:
#     AutoPublishAlias: live
#     DeploymentPreference:
#       Enabled: true
#       Type: Canary10Percent5Minutes

Resources:
    SaveRecordFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: record/
            Handler: app.lambda_handler
            Runtime: python3.6
            Events:
                SaveRecord:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /record
                        Method: post
    Records:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: race-records-json
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET,POST]
              AllowedOrigins: ['*']
              ExposedHeaders: [Date]
              MaxAge: '3600'

    Jekyll:
      Type: AWS::S3::Bucket
      Properties:
        BucketName:  race-records-jekyll
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET,POST]
              AllowedOrigins: ['*']
              ExposedHeaders: [Date]
              MaxAge: '3600'

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref Records
        PolicyDocument:
          Id: WebHostingJson
          Version: 2012-10-17
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref Records
                  - /*

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref Jekyll
        PolicyDocument:
          Id: WebHostingJekyll
          Version: 2012-10-17
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref Jekyll
                  - /*
    myDNSRecord:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId: ZTZVQU6WGITSI
        Name: api.covecode.com.
        Type: CNAME
        TTL: '900'
        ResourceRecords:
        - '5ham45cla1.execute-api.us-east-1.amazonaws.com/Prod/'
#        - !GetAtt AWS::ApiGateway::RestApi .attributeName

Outputs:

    SaveRecordApi:
      Description: "API Gateway endpoint URL for Prod stage for Save Record function"
      Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/record/"

    SaveRecordFunction:
      Description: "Save Record Lambda Function ARN"
      Value: !GetAtt SaveRecordFunction.Arn

    SaveRecordFunctionIamRole:
      Description: "Implicit IAM Role created for Save Record function"
      Value: !GetAtt SaveRecordFunctionRole.Arn

    SaveReadingFunction:
      Description: "Save Reading Lambda Function ARN"
      Value: !GetAtt SaveReadingFunction.Arn

    SaveReadingFunctionIamRole:
      Description: "Implicit IAM Role created for Save Reading function"
      Value: !GetAtt SaveReadingFunctionRole.Arn

    WebsiteURL:
      Value: !GetAtt [Jekyll, WebsiteURL]
      Description: URL for website hosted on S3

    S3BucketSecureURL:
      Value: !Join ['', ['https://', !GetAtt [Jekyll, DomainName]]]
      Description: Name of S3 bucket to hold website content

    WebsiteURL:
      Value: !GetAtt [Records, WebsiteURL]
      Description: URL for website hosted on S3

    S3BucketSecureURL:
      Value: !Join ['', ['https://', !GetAtt [Records, DomainName]]]
      Description: Name of S3 bucket to hold website content
Cors:
  AllowMethods: 'GET,POST'
  AllowHeaders: '*'
  # For example, "'X-Forwarded-For'". Checkout [HTTP Spec](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) for more details on the value
  AllowOrigin: '*'
  # For example, "'www.example.com'". Checkout [HTTP Spec](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) for more details on this value.
